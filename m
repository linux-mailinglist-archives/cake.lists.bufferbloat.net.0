Return-Path: <cake-bounces@lists.bufferbloat.net>
X-Original-To: lists+cake@lfdr.de
Delivered-To: lists+cake@lfdr.de
Received: from lists.bufferbloat.net (lists.bufferbloat.net [IPv6:2600:3c03:e000:3ca:f00f:f00f:b33b:b33b])
	by mail.lfdr.de (Postfix) with ESMTPS id 3F6D22139C8
	for <lists+cake@lfdr.de>; Fri,  3 Jul 2020 14:07:48 +0200 (CEST)
Received: from pitt.bufferbloat.net (localhost [127.0.0.1])
	by lists.bufferbloat.net (Postfix) with ESMTP id B642C3CB44;
	Fri,  3 Jul 2020 08:07:46 -0400 (EDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=lists.bufferbloat.net; s=201610; t=1593778066;
	bh=kxpizqa+5fTvs6PZ2E5V54Qlt1TuXVZYh59rfImr+QE=;
	h=From:To:Date:Subject:List-Id:List-Unsubscribe:List-Archive:
	 List-Post:List-Help:List-Subscribe:Cc:From;
	b=NkXF7N9k4vIFSjzZJTtWKp/WolkcHSaVOqBRQymKdjZKmIFZD0F51UwN60CoiitTK
	 7wr249ofxTr0TKVjwYi+U9ZYcEsAtG/yZhsKLEfd5yxrNZXPLrFM0VJdVvniOxmfuz
	 GUoo2h0uoCCSaRum0jpKlT4EsB/PTNU1lsaeAgcxFRE07WuIKIUVYF5G9p8Qdu+dhg
	 UomZD3R5wC+GRi/oivisbKw39Nhkmu1a1kgmvko3/hUblCV3kg+mdP1y1NkMMODGx0
	 N8BHAvTC8weBw+DCDQnCyZvKXBbTszPsSDfoBqmFV4adONLaiMrmHLE4sO1me2zIvs
	 96hsX53jz3SHQ==
X-Original-To: cake@lists.bufferbloat.net
Delivered-To: cake@lists.bufferbloat.net
Received: from us-smtp-1.mimecast.com (us-smtp-delivery-1.mimecast.com
 [205.139.110.120])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-SHA384 (256/256 bits))
 (No client certificate requested)
 by lists.bufferbloat.net (Postfix) with ESMTPS id CA6C53B2A4
 for <cake@lists.bufferbloat.net>; Fri,  3 Jul 2020 08:07:45 -0400 (EDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
 s=mimecast20190719; t=1593778065;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding;
 bh=0mfUeqVaSjXVBL7MpL+xeLd04ZVHKvfTrHYEuTtF6zs=;
 b=fYuyVs82oaSP702eNJTv3gY7dF/kG73WzLNao1ULihmC2hUEIALzGT0dJQPCCHUYAYJ/JI
 SNlrtxF1Lonsf5D00VyNmLXBaZp3Hc7ufqspN+I2J6naTY/R9fJNlaUdOYYrz4fy/GyCrH
 TqwSP9/isfG496pO0e9rsLjmol2J2LY=
Received: from mail-qt1-f198.google.com (mail-qt1-f198.google.com
 [209.85.160.198]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-412-Gqnws8nvPmeS3mZNEmNW-A-1; Fri, 03 Jul 2020 08:07:41 -0400
X-MC-Unique: Gqnws8nvPmeS3mZNEmNW-A-1
Received: by mail-qt1-f198.google.com with SMTP id c22so21667009qtp.9
 for <cake@lists.bufferbloat.net>; Fri, 03 Jul 2020 05:07:41 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=0mfUeqVaSjXVBL7MpL+xeLd04ZVHKvfTrHYEuTtF6zs=;
 b=AYq/nkVQRB1oNYDGIoefnEU6UeBJxMQ4AfuLcf6r1sQXGEj5cIefTP4Zbh19jS2s7Y
 LUG+pXboHzrhG83HIUdsHAM3jisxb1d464MMT5XgPpdgEGBvQMaiETGln2Jc/uq8qMRU
 0xHy8tZqcgjLs4JMk0w8OcWAT541mMYMaxPVbIe5e//YXLuRUbkZhYZ4YCdfk7rOIr4/
 GaVenRQA70eA/B8idlpiww7Rdnt/fIscdF3XkkkP1KVwxP5KzAIFbYVoXPZDGHrp41vR
 dF7bv0IP3+WX2M5OjFgKGFnO4zXMaZ651tBkOKi+gxt0/pGe47EKWP5vBJo8fZO8DrLt
 TDyg==
X-Gm-Message-State: AOAM532d5I7cyPdSehmqDpkEKaXr4gP7ERrQTF14z0/NiIcfu1Wsp6C8
 XY1dkO30Um2J/YpC+TpQajM3GVKaj21jhlkelmR3bfk8+vAQeUZ5N/Izd3Z21XRgf1vln2rCHKS
 U4aH0trrN2BJ+dVF+eE9TAw==
X-Received: by 2002:ac8:65c3:: with SMTP id t3mr36777461qto.132.1593778060136; 
 Fri, 03 Jul 2020 05:07:40 -0700 (PDT)
X-Google-Smtp-Source: ABdhPJxYmUdVM2bqV7zYNmZNQ2nDKnu0DaVAe0Y7nn9XLqcJ17h7Uj3gNmPMOPU7BQrZ97QB2alOyg==
X-Received: by 2002:ac8:65c3:: with SMTP id t3mr36777430qto.132.1593778059791; 
 Fri, 03 Jul 2020 05:07:39 -0700 (PDT)
Received: from alrua-x1.borgediget.toke.dk ([45.145.92.2])
 by smtp.gmail.com with ESMTPSA id h16sm9960518qkl.96.2020.07.03.05.07.38
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Fri, 03 Jul 2020 05:07:39 -0700 (PDT)
Received: by alrua-x1.borgediget.toke.dk (Postfix, from userid 1000)
 id 61DCC1828E4; Fri,  3 Jul 2020 14:07:37 +0200 (CEST)
From: =?UTF-8?q?Toke=20H=C3=B8iland-J=C3=B8rgensen?= <toke@redhat.com>
To: davem@davemloft.net
Date: Fri,  3 Jul 2020 14:05:23 +0200
Message-Id: <20200703120523.465334-1-toke@redhat.com>
X-Mailer: git-send-email 2.27.0
MIME-Version: 1.0
Authentication-Results: relay.mimecast.com;
 auth=pass smtp.auth=CUSA124A263 smtp.mailfrom=toke@redhat.com
X-Mimecast-Spam-Score: 0
X-Mimecast-Originator: redhat.com
Subject: [Cake] [PATCH net] sched: consistently handle layer3 header
	accesses in the presence of VLANs
X-BeenThere: cake@lists.bufferbloat.net
X-Mailman-Version: 2.1.20
Precedence: list
List-Id: Cake - FQ_codel the next generation <cake.lists.bufferbloat.net>
List-Unsubscribe: <https://lists.bufferbloat.net/options/cake>,
 <mailto:cake-request@lists.bufferbloat.net?subject=unsubscribe>
List-Archive: <https://lists.bufferbloat.net/pipermail/cake>
List-Post: <mailto:cake@lists.bufferbloat.net>
List-Help: <mailto:cake-request@lists.bufferbloat.net?subject=help>
List-Subscribe: <https://lists.bufferbloat.net/listinfo/cake>,
 <mailto:cake-request@lists.bufferbloat.net?subject=subscribe>
Cc: Davide Caratti <dcaratti@redhat.com>, Jiri Pirko <jiri@resnulli.us>,
 netdev@vger.kernel.org, Jamal Hadi Salim <jhs@mojatatu.com>,
 cake@lists.bufferbloat.net, Ilya Ponetayev <i.ponetaev@ndmsystems.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: cake-bounces@lists.bufferbloat.net
Sender: "Cake" <cake-bounces@lists.bufferbloat.net>

VGhlcmUgYXJlIGEgY291cGxlIG9mIHBsYWNlcyBpbiBuZXQvc2NoZWQvIHRoYXQgY2hlY2sgc2ti
LT5wcm90b2NvbCBhbmQgYWN0Cm9uIHRoZSB2YWx1ZSB0aGVyZS4gSG93ZXZlciwgaW4gdGhlIHBy
ZXNlbmNlIG9mIFZMQU4gdGFncywgdGhlIHZhbHVlIHN0b3JlZAppbiBza2ItPnByb3RvY29sIGNh
biBiZSBpbmNvbnNpc3RlbnQgYmFzZWQgb24gd2hldGhlciBWTEFOIGFjY2VsZXJhdGlvbiBpcwpl
bmFibGVkLiBUaGUgY29tbWl0IHF1b3RlZCBpbiB0aGUgRml4ZXMgdGFnIGJlbG93IGZpeGVkIHRo
ZSB1c2VycyBvZgpza2ItPnByb3RvY29sIHRvIHVzZSBhIGhlbHBlciB0aGF0IHdpbGwgYWx3YXlz
IHNlZSB0aGUgVkxBTiBldGhlcnR5cGUuCgpIb3dldmVyLCBtb3N0IG9mIHRoZSBjYWxsZXJzIGRv
bid0IGFjdHVhbGx5IGhhbmRsZSB0aGUgVkxBTiBldGhlcnR5cGUsIGJ1dApleHBlY3QgdG8gZmlu
ZCB0aGUgSVAgaGVhZGVyIHR5cGUgaW4gdGhlIHByb3RvY29sIGZpZWxkLiBUaGlzIG1lYW5zIHRo
YXQKdGhpbmdzIGxpa2UgY2hhbmdpbmcgdGhlIEVDTiBmaWVsZCwgb3IgcGFyc2luZyBkaWZmc2Vy
diB2YWx1ZXMsIHN0b3BzCndvcmtpbmcgaWYgdGhlcmUncyBhIFZMQU4gdGFnLCBvciBpZiB0aGVy
ZSBhcmUgbXVsdGlwbGUgbmVzdGVkIFZMQU4KdGFncyAoUWluUSkuCgpUbyBmaXggdGhpcywgY2hh
bmdlIHRoZSBoZWxwZXIgdG8gdGFrZSBhbiBhcmd1bWVudCB0aGF0IGluZGljYXRlcyB3aGV0aGVy
CnRoZSBjYWxsZXIgd2FudHMgdG8gc2tpcCB0aGUgVkxBTiB0YWdzIG9yIG5vdC4gV2hlbiBza2lw
cGluZyBWTEFOIHRhZ3MsIHdlCm1ha2Ugc3VyZSB0byBza2lwIGFsbCBvZiB0aGVtLCBzbyBiZWhh
dmlvdXIgaXMgY29uc2lzdGVudCBldmVuIGluIFFpblEKbW9kZS4KClRvIG1ha2UgdGhlIGhlbHBl
ciB1c2FibGUgZnJvbSB0aGUgRUNOIGNvZGUsIG1vdmUgaXQgdG8gaWZfdmxhbi5oIGluc3RlYWQK
b2YgcGt0X3NjaGVkLmguCgpSZXBvcnRlZC1ieTogSWx5YSBQb25ldGF5ZXYgPGkucG9uZXRhZXZA
bmRtc3lzdGVtcy5jb20+CkZpeGVzOiBkOGI5NjA1ZDI2OTcgKCJuZXQ6IHNjaGVkOiBmaXggc2ti
LT5wcm90b2NvbCB1c2UgaW4gY2FzZSBvZiBhY2NlbGVyYXRlZCB2bGFuIHBhdGgiKQpTaWduZWQt
b2ZmLWJ5OiBUb2tlIEjDuGlsYW5kLUrDuHJnZW5zZW4gPHRva2VAcmVkaGF0LmNvbT4KLS0tCiBp
bmNsdWRlL2xpbnV4L2lmX3ZsYW4uaCB8IDI3ICsrKysrKysrKysrKysrKysrKysrKysrKysrKwog
aW5jbHVkZS9uZXQvaW5ldF9lY24uaCAgfCAgNSArKystLQogaW5jbHVkZS9uZXQvcGt0X3NjaGVk
LmggfCAxMSAtLS0tLS0tLS0tLQogbmV0L3NjaGVkL2FjdF9jc3VtLmMgICAgfCAgMiArLQogbmV0
L3NjaGVkL2FjdF9jdGluZm8uYyAgfCAgNCArKy0tCiBuZXQvc2NoZWQvYWN0X3NrYmVkaXQuYyB8
ICAyICstCiBuZXQvc2NoZWQvY2xzX2FwaS5jICAgICB8ICAyICstCiBuZXQvc2NoZWQvY2xzX2Zs
b3cuYyAgICB8ICA4ICsrKystLS0tCiBuZXQvc2NoZWQvZW1faXBzZXQuYyAgICB8ICAyICstCiBu
ZXQvc2NoZWQvZW1faXB0LmMgICAgICB8ICAyICstCiBuZXQvc2NoZWQvZW1fbWV0YS5jICAgICB8
ICAyICstCiBuZXQvc2NoZWQvc2NoX2Nha2UuYyAgICB8ICA0ICsrLS0KIG5ldC9zY2hlZC9zY2hf
ZHNtYXJrLmMgIHwgIDYgKysrLS0tCiBuZXQvc2NoZWQvc2NoX3RlcWwuYyAgICB8ICAyICstCiAx
NCBmaWxlcyBjaGFuZ2VkLCA0OCBpbnNlcnRpb25zKCspLCAzMSBkZWxldGlvbnMoLSkKCmRpZmYg
LS1naXQgYS9pbmNsdWRlL2xpbnV4L2lmX3ZsYW4uaCBiL2luY2x1ZGUvbGludXgvaWZfdmxhbi5o
CmluZGV4IGIwNWU4NTVmMWRkZC4uNzYxYWFlODkwYjJkIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xp
bnV4L2lmX3ZsYW4uaAorKysgYi9pbmNsdWRlL2xpbnV4L2lmX3ZsYW4uaApAQCAtNzgsNiArNzgs
MzMgQEAgc3RhdGljIGlubGluZSBib29sIGlzX3ZsYW5fZGV2KGNvbnN0IHN0cnVjdCBuZXRfZGV2
aWNlICpkZXYpCiAjZGVmaW5lIHNrYl92bGFuX3RhZ19nZXRfY2ZpKF9fc2tiKQkoISEoKF9fc2ti
KS0+dmxhbl90Y2kgJiBWTEFOX0NGSV9NQVNLKSkKICNkZWZpbmUgc2tiX3ZsYW5fdGFnX2dldF9w
cmlvKF9fc2tiKQkoKChfX3NrYiktPnZsYW5fdGNpICYgVkxBTl9QUklPX01BU0spID4+IFZMQU5f
UFJJT19TSElGVCkKIAorLyogQSBnZXR0ZXIgZm9yIHRoZSBTS0IgcHJvdG9jb2wgZmllbGQgd2hp
Y2ggd2lsbCBoYW5kbGUgVkxBTiB0YWdzIGNvbnNpc3RlbnRseQorICogd2hldGhlciBWTEFOIGFj
Y2VsZXJhdGlvbiBpcyBlbmFibGVkIG9yIG5vdC4KKyAqLworc3RhdGljIGlubGluZSBfX2JlMTYg
c2tiX3Byb3RvY29sKGNvbnN0IHN0cnVjdCBza19idWZmICpza2IsIGJvb2wgc2tpcF92bGFuKQor
eworCXVuc2lnbmVkIGludCBvZmZzZXQgPSBza2JfbWFjX29mZnNldChza2IpICsgc2l6ZW9mKHN0
cnVjdCBldGhoZHIpOworCV9fYmUxNiBwcm90byA9IHNrYi0+cHJvdG9jb2w7CisJc3RydWN0IHZs
YW5faGRyIHZoZHIsICp2aDsKKworCWlmICghc2tpcF92bGFuKQorCQkvKiBWTEFOIGFjY2VsZXJh
dGlvbiBzdHJpcHMgdGhlIFZMQU4gaGVhZGVyIGZyb20gdGhlIHNrYiBhbmQKKwkJICogbW92ZXMg
aXQgdG8gc2tiLT52bGFuX3Byb3RvCisJCSAqLworCQlyZXR1cm4gc2tiX3ZsYW5fdGFnX3ByZXNl
bnQoc2tiKSA/IHNrYi0+dmxhbl9wcm90byA6IHByb3RvOworCisJd2hpbGUgKHByb3RvID09IGh0
b25zKEVUSF9QXzgwMjFRKSB8fCBwcm90byA9PSBodG9ucyhFVEhfUF84MDIxQUQpKSB7CisJCXZo
ID0gc2tiX2hlYWRlcl9wb2ludGVyKHNrYiwgb2Zmc2V0LCBzaXplb2YodmhkciksICZ2aGRyKTsK
KwkJaWYgKCF2aCkKKwkJCWJyZWFrOworCisJCXByb3RvID0gdmgtPmhfdmxhbl9lbmNhcHN1bGF0
ZWRfcHJvdG87CisJCW9mZnNldCArPSBzaXplb2Yodmhkcik7CisJfQorCisJcmV0dXJuIHByb3Rv
OworfQorCiBzdGF0aWMgaW5saW5lIGludCB2bGFuX2dldF9yeF9jdGFnX2ZpbHRlcl9pbmZvKHN0
cnVjdCBuZXRfZGV2aWNlICpkZXYpCiB7CiAJQVNTRVJUX1JUTkwoKTsKZGlmZiAtLWdpdCBhL2lu
Y2x1ZGUvbmV0L2luZXRfZWNuLmggYi9pbmNsdWRlL25ldC9pbmV0X2Vjbi5oCmluZGV4IDBmMGQx
ZWZlMDZkZC4uODI3NjNiYTU5N2YyIDEwMDY0NAotLS0gYS9pbmNsdWRlL25ldC9pbmV0X2Vjbi5o
CisrKyBiL2luY2x1ZGUvbmV0L2luZXRfZWNuLmgKQEAgLTQsNiArNCw3IEBACiAKICNpbmNsdWRl
IDxsaW51eC9pcC5oPgogI2luY2x1ZGUgPGxpbnV4L3NrYnVmZi5oPgorI2luY2x1ZGUgPGxpbnV4
L2lmX3ZsYW4uaD4KIAogI2luY2x1ZGUgPG5ldC9pbmV0X3NvY2suaD4KICNpbmNsdWRlIDxuZXQv
ZHNmaWVsZC5oPgpAQCAtMTcyLDcgKzE3Myw3IEBAIHN0YXRpYyBpbmxpbmUgdm9pZCBpcHY2X2Nv
cHlfZHNjcCh1bnNpZ25lZCBpbnQgZHNjcCwgc3RydWN0IGlwdjZoZHIgKmlubmVyKQogCiBzdGF0
aWMgaW5saW5lIGludCBJTkVUX0VDTl9zZXRfY2Uoc3RydWN0IHNrX2J1ZmYgKnNrYikKIHsKLQlz
d2l0Y2ggKHNrYi0+cHJvdG9jb2wpIHsKKwlzd2l0Y2ggKHNrYl9wcm90b2NvbChza2IsIHRydWUp
KSB7CiAJY2FzZSBjcHVfdG9fYmUxNihFVEhfUF9JUCk6CiAJCWlmIChza2JfbmV0d29ya19oZWFk
ZXIoc2tiKSArIHNpemVvZihzdHJ1Y3QgaXBoZHIpIDw9CiAJCSAgICBza2JfdGFpbF9wb2ludGVy
KHNrYikpCkBAIC0xOTEsNyArMTkyLDcgQEAgc3RhdGljIGlubGluZSBpbnQgSU5FVF9FQ05fc2V0
X2NlKHN0cnVjdCBza19idWZmICpza2IpCiAKIHN0YXRpYyBpbmxpbmUgaW50IElORVRfRUNOX3Nl
dF9lY3QxKHN0cnVjdCBza19idWZmICpza2IpCiB7Ci0Jc3dpdGNoIChza2ItPnByb3RvY29sKSB7
CisJc3dpdGNoIChza2JfcHJvdG9jb2woc2tiLCB0cnVlKSkgewogCWNhc2UgY3B1X3RvX2JlMTYo
RVRIX1BfSVApOgogCQlpZiAoc2tiX25ldHdvcmtfaGVhZGVyKHNrYikgKyBzaXplb2Yoc3RydWN0
IGlwaGRyKSA8PQogCQkgICAgc2tiX3RhaWxfcG9pbnRlcihza2IpKQpkaWZmIC0tZ2l0IGEvaW5j
bHVkZS9uZXQvcGt0X3NjaGVkLmggYi9pbmNsdWRlL25ldC9wa3Rfc2NoZWQuaAppbmRleCA5MDky
ZTY5NzA1OWUuLmFjOGM4OTBhMjY1NyAxMDA2NDQKLS0tIGEvaW5jbHVkZS9uZXQvcGt0X3NjaGVk
LmgKKysrIGIvaW5jbHVkZS9uZXQvcGt0X3NjaGVkLmgKQEAgLTEzNiwxNyArMTM2LDYgQEAgc3Rh
dGljIGlubGluZSB2b2lkIHFkaXNjX3J1bihzdHJ1Y3QgUWRpc2MgKnEpCiAJfQogfQogCi1zdGF0
aWMgaW5saW5lIF9fYmUxNiB0Y19za2JfcHJvdG9jb2woY29uc3Qgc3RydWN0IHNrX2J1ZmYgKnNr
YikKLXsKLQkvKiBXZSBuZWVkIHRvIHRha2UgZXh0cmEgY2FyZSBpbiBjYXNlIHRoZSBza2IgY2Ft
ZSB2aWEKLQkgKiB2bGFuIGFjY2VsZXJhdGVkIHBhdGguIEluIHRoYXQgY2FzZSwgdXNlIHNrYi0+
dmxhbl9wcm90bwotCSAqIGFzIHRoZSBvcmlnaW5hbCB2bGFuIGhlYWRlciB3YXMgYWxyZWFkeSBz
dHJpcHBlZC4KLQkgKi8KLQlpZiAoc2tiX3ZsYW5fdGFnX3ByZXNlbnQoc2tiKSkKLQkJcmV0dXJu
IHNrYi0+dmxhbl9wcm90bzsKLQlyZXR1cm4gc2tiLT5wcm90b2NvbDsKLX0KLQogLyogQ2FsY3Vs
YXRlIG1heGltYWwgc2l6ZSBvZiBwYWNrZXQgc2VlbiBieSBoYXJkX3N0YXJ0X3htaXQKICAgIHJv
dXRpbmUgb2YgdGhpcyBkZXZpY2UuCiAgKi8KZGlmZiAtLWdpdCBhL25ldC9zY2hlZC9hY3RfY3N1
bS5jIGIvbmV0L3NjaGVkL2FjdF9jc3VtLmMKaW5kZXggY2I4NjA4ZjBhNzdhLi5jNjA2NzRjZjI1
YzQgMTAwNjQ0Ci0tLSBhL25ldC9zY2hlZC9hY3RfY3N1bS5jCisrKyBiL25ldC9zY2hlZC9hY3Rf
Y3N1bS5jCkBAIC01ODcsNyArNTg3LDcgQEAgc3RhdGljIGludCB0Y2ZfY3N1bV9hY3Qoc3RydWN0
IHNrX2J1ZmYgKnNrYiwgY29uc3Qgc3RydWN0IHRjX2FjdGlvbiAqYSwKIAkJZ290byBkcm9wOwog
CiAJdXBkYXRlX2ZsYWdzID0gcGFyYW1zLT51cGRhdGVfZmxhZ3M7Ci0JcHJvdG9jb2wgPSB0Y19z
a2JfcHJvdG9jb2woc2tiKTsKKwlwcm90b2NvbCA9IHNrYl9wcm90b2NvbChza2IsIGZhbHNlKTsK
IGFnYWluOgogCXN3aXRjaCAocHJvdG9jb2wpIHsKIAljYXNlIGNwdV90b19iZTE2KEVUSF9QX0lQ
KToKZGlmZiAtLWdpdCBhL25ldC9zY2hlZC9hY3RfY3RpbmZvLmMgYi9uZXQvc2NoZWQvYWN0X2N0
aW5mby5jCmluZGV4IDE5NjQ5NjIzNDkzYi4uODJmOTA4OGEzYzMwIDEwMDY0NAotLS0gYS9uZXQv
c2NoZWQvYWN0X2N0aW5mby5jCisrKyBiL25ldC9zY2hlZC9hY3RfY3RpbmZvLmMKQEAgLTk2LDEz
ICs5NiwxMyBAQCBzdGF0aWMgaW50IHRjZl9jdGluZm9fYWN0KHN0cnVjdCBza19idWZmICpza2Is
IGNvbnN0IHN0cnVjdCB0Y19hY3Rpb24gKmEsCiAJYWN0aW9uID0gUkVBRF9PTkNFKGNhLT50Y2Zf
YWN0aW9uKTsKIAogCXdsZW4gPSBza2JfbmV0d29ya19vZmZzZXQoc2tiKTsKLQlpZiAodGNfc2ti
X3Byb3RvY29sKHNrYikgPT0gaHRvbnMoRVRIX1BfSVApKSB7CisJaWYgKHNrYl9wcm90b2NvbChz
a2IsIHRydWUpID09IGh0b25zKEVUSF9QX0lQKSkgewogCQl3bGVuICs9IHNpemVvZihzdHJ1Y3Qg
aXBoZHIpOwogCQlpZiAoIXBza2JfbWF5X3B1bGwoc2tiLCB3bGVuKSkKIAkJCWdvdG8gb3V0Owog
CiAJCXByb3RvID0gTkZQUk9UT19JUFY0OwotCX0gZWxzZSBpZiAodGNfc2tiX3Byb3RvY29sKHNr
YikgPT0gaHRvbnMoRVRIX1BfSVBWNikpIHsKKwl9IGVsc2UgaWYgKHNrYl9wcm90b2NvbChza2Is
IHRydWUpID09IGh0b25zKEVUSF9QX0lQVjYpKSB7CiAJCXdsZW4gKz0gc2l6ZW9mKHN0cnVjdCBp
cHY2aGRyKTsKIAkJaWYgKCFwc2tiX21heV9wdWxsKHNrYiwgd2xlbikpCiAJCQlnb3RvIG91dDsK
ZGlmZiAtLWdpdCBhL25ldC9zY2hlZC9hY3Rfc2tiZWRpdC5jIGIvbmV0L3NjaGVkL2FjdF9za2Jl
ZGl0LmMKaW5kZXggYjEyNWIyYmU0NDY3Li5iMmIzZmFhNTcyOTQgMTAwNjQ0Ci0tLSBhL25ldC9z
Y2hlZC9hY3Rfc2tiZWRpdC5jCisrKyBiL25ldC9zY2hlZC9hY3Rfc2tiZWRpdC5jCkBAIC00MSw3
ICs0MSw3IEBAIHN0YXRpYyBpbnQgdGNmX3NrYmVkaXRfYWN0KHN0cnVjdCBza19idWZmICpza2Is
IGNvbnN0IHN0cnVjdCB0Y19hY3Rpb24gKmEsCiAJaWYgKHBhcmFtcy0+ZmxhZ3MgJiBTS0JFRElU
X0ZfSU5IRVJJVERTRklFTEQpIHsKIAkJaW50IHdsZW4gPSBza2JfbmV0d29ya19vZmZzZXQoc2ti
KTsKIAotCQlzd2l0Y2ggKHRjX3NrYl9wcm90b2NvbChza2IpKSB7CisJCXN3aXRjaCAoc2tiX3By
b3RvY29sKHNrYiwgdHJ1ZSkpIHsKIAkJY2FzZSBodG9ucyhFVEhfUF9JUCk6CiAJCQl3bGVuICs9
IHNpemVvZihzdHJ1Y3QgaXBoZHIpOwogCQkJaWYgKCFwc2tiX21heV9wdWxsKHNrYiwgd2xlbikp
CmRpZmYgLS1naXQgYS9uZXQvc2NoZWQvY2xzX2FwaS5jIGIvbmV0L3NjaGVkL2Nsc19hcGkuYwpp
bmRleCBmYWE3OGI3ZGQ5NjIuLmU2MmJlZWMwZDg0NCAxMDA2NDQKLS0tIGEvbmV0L3NjaGVkL2Ns
c19hcGkuYworKysgYi9uZXQvc2NoZWQvY2xzX2FwaS5jCkBAIC0xNTM4LDcgKzE1MzgsNyBAQCBz
dGF0aWMgaW5saW5lIGludCBfX3RjZl9jbGFzc2lmeShzdHJ1Y3Qgc2tfYnVmZiAqc2tiLAogcmVj
bGFzc2lmeToKICNlbmRpZgogCWZvciAoOyB0cDsgdHAgPSByY3VfZGVyZWZlcmVuY2VfYmgodHAt
Pm5leHQpKSB7Ci0JCV9fYmUxNiBwcm90b2NvbCA9IHRjX3NrYl9wcm90b2NvbChza2IpOworCQlf
X2JlMTYgcHJvdG9jb2wgPSBza2JfcHJvdG9jb2woc2tiLCBmYWxzZSk7CiAJCWludCBlcnI7CiAK
IAkJaWYgKHRwLT5wcm90b2NvbCAhPSBwcm90b2NvbCAmJgpkaWZmIC0tZ2l0IGEvbmV0L3NjaGVk
L2Nsc19mbG93LmMgYi9uZXQvc2NoZWQvY2xzX2Zsb3cuYwppbmRleCA4MGFlN2I5ZmE5MGEuLjE5
ZWJmNmMxYTg0OCAxMDA2NDQKLS0tIGEvbmV0L3NjaGVkL2Nsc19mbG93LmMKKysrIGIvbmV0L3Nj
aGVkL2Nsc19mbG93LmMKQEAgLTgwLDcgKzgwLDcgQEAgc3RhdGljIHUzMiBmbG93X2dldF9kc3Qo
Y29uc3Qgc3RydWN0IHNrX2J1ZmYgKnNrYiwgY29uc3Qgc3RydWN0IGZsb3dfa2V5cyAqZmxvdykK
IAlpZiAoZHN0KQogCQlyZXR1cm4gbnRvaGwoZHN0KTsKIAotCXJldHVybiBhZGRyX2ZvbGQoc2ti
X2RzdChza2IpKSBeIChfX2ZvcmNlIHUxNikgdGNfc2tiX3Byb3RvY29sKHNrYik7CisJcmV0dXJu
IGFkZHJfZm9sZChza2JfZHN0KHNrYikpIF4gKF9fZm9yY2UgdTE2KSBza2JfcHJvdG9jb2woc2ti
LCB0cnVlKTsKIH0KIAogc3RhdGljIHUzMiBmbG93X2dldF9wcm90byhjb25zdCBzdHJ1Y3Qgc2tf
YnVmZiAqc2tiLApAQCAtMTA0LDcgKzEwNCw3IEBAIHN0YXRpYyB1MzIgZmxvd19nZXRfcHJvdG9f
ZHN0KGNvbnN0IHN0cnVjdCBza19idWZmICpza2IsCiAJaWYgKGZsb3ctPnBvcnRzLnBvcnRzKQog
CQlyZXR1cm4gbnRvaHMoZmxvdy0+cG9ydHMuZHN0KTsKIAotCXJldHVybiBhZGRyX2ZvbGQoc2ti
X2RzdChza2IpKSBeIChfX2ZvcmNlIHUxNikgdGNfc2tiX3Byb3RvY29sKHNrYik7CisJcmV0dXJu
IGFkZHJfZm9sZChza2JfZHN0KHNrYikpIF4gKF9fZm9yY2UgdTE2KSBza2JfcHJvdG9jb2woc2ti
LCB0cnVlKTsKIH0KIAogc3RhdGljIHUzMiBmbG93X2dldF9paWYoY29uc3Qgc3RydWN0IHNrX2J1
ZmYgKnNrYikKQEAgLTE1MSw3ICsxNTEsNyBAQCBzdGF0aWMgdTMyIGZsb3dfZ2V0X25mY3QoY29u
c3Qgc3RydWN0IHNrX2J1ZmYgKnNrYikKIHN0YXRpYyB1MzIgZmxvd19nZXRfbmZjdF9zcmMoY29u
c3Qgc3RydWN0IHNrX2J1ZmYgKnNrYiwKIAkJCSAgICAgY29uc3Qgc3RydWN0IGZsb3dfa2V5cyAq
ZmxvdykKIHsKLQlzd2l0Y2ggKHRjX3NrYl9wcm90b2NvbChza2IpKSB7CisJc3dpdGNoIChza2Jf
cHJvdG9jb2woc2tiLCB0cnVlKSkgewogCWNhc2UgaHRvbnMoRVRIX1BfSVApOgogCQlyZXR1cm4g
bnRvaGwoQ1RUVVBMRShza2IsIHNyYy51My5pcCkpOwogCWNhc2UgaHRvbnMoRVRIX1BfSVBWNik6
CkBAIC0xNjQsNyArMTY0LDcgQEAgc3RhdGljIHUzMiBmbG93X2dldF9uZmN0X3NyYyhjb25zdCBz
dHJ1Y3Qgc2tfYnVmZiAqc2tiLAogc3RhdGljIHUzMiBmbG93X2dldF9uZmN0X2RzdChjb25zdCBz
dHJ1Y3Qgc2tfYnVmZiAqc2tiLAogCQkJICAgICBjb25zdCBzdHJ1Y3QgZmxvd19rZXlzICpmbG93
KQogewotCXN3aXRjaCAodGNfc2tiX3Byb3RvY29sKHNrYikpIHsKKwlzd2l0Y2ggKHNrYl9wcm90
b2NvbChza2IsIHRydWUpKSB7CiAJY2FzZSBodG9ucyhFVEhfUF9JUCk6CiAJCXJldHVybiBudG9o
bChDVFRVUExFKHNrYiwgZHN0LnUzLmlwKSk7CiAJY2FzZSBodG9ucyhFVEhfUF9JUFY2KToKZGlm
ZiAtLWdpdCBhL25ldC9zY2hlZC9lbV9pcHNldC5jIGIvbmV0L3NjaGVkL2VtX2lwc2V0LmMKaW5k
ZXggZGYwMDU2NmQzMjdkLi5jOTVjZjg2ZmI0MzEgMTAwNjQ0Ci0tLSBhL25ldC9zY2hlZC9lbV9p
cHNldC5jCisrKyBiL25ldC9zY2hlZC9lbV9pcHNldC5jCkBAIC01OSw3ICs1OSw3IEBAIHN0YXRp
YyBpbnQgZW1faXBzZXRfbWF0Y2goc3RydWN0IHNrX2J1ZmYgKnNrYiwgc3RydWN0IHRjZl9lbWF0
Y2ggKmVtLAogCX07CiAJaW50IHJldCwgbmV0d29ya19vZmZzZXQ7CiAKLQlzd2l0Y2ggKHRjX3Nr
Yl9wcm90b2NvbChza2IpKSB7CisJc3dpdGNoIChza2JfcHJvdG9jb2woc2tiLCB0cnVlKSkgewog
CWNhc2UgaHRvbnMoRVRIX1BfSVApOgogCQlzdGF0ZS5wZiA9IE5GUFJPVE9fSVBWNDsKIAkJaWYg
KCFwc2tiX25ldHdvcmtfbWF5X3B1bGwoc2tiLCBzaXplb2Yoc3RydWN0IGlwaGRyKSkpCmRpZmYg
LS1naXQgYS9uZXQvc2NoZWQvZW1faXB0LmMgYi9uZXQvc2NoZWQvZW1faXB0LmMKaW5kZXggMTg3
NTVkMjlmZDE1Li4zNjUwMTE3ZGE0N2YgMTAwNjQ0Ci0tLSBhL25ldC9zY2hlZC9lbV9pcHQuYwor
KysgYi9uZXQvc2NoZWQvZW1faXB0LmMKQEAgLTIxMiw3ICsyMTIsNyBAQCBzdGF0aWMgaW50IGVt
X2lwdF9tYXRjaChzdHJ1Y3Qgc2tfYnVmZiAqc2tiLCBzdHJ1Y3QgdGNmX2VtYXRjaCAqZW0sCiAJ
c3RydWN0IG5mX2hvb2tfc3RhdGUgc3RhdGU7CiAJaW50IHJldDsKIAotCXN3aXRjaCAodGNfc2ti
X3Byb3RvY29sKHNrYikpIHsKKwlzd2l0Y2ggKHNrYl9wcm90b2NvbChza2IsIHRydWUpKSB7CiAJ
Y2FzZSBodG9ucyhFVEhfUF9JUCk6CiAJCWlmICghcHNrYl9uZXR3b3JrX21heV9wdWxsKHNrYiwg
c2l6ZW9mKHN0cnVjdCBpcGhkcikpKQogCQkJcmV0dXJuIDA7CmRpZmYgLS1naXQgYS9uZXQvc2No
ZWQvZW1fbWV0YS5jIGIvbmV0L3NjaGVkL2VtX21ldGEuYwppbmRleCBkOTk5NjZhNTVjODQuLjQ2
MjU0OTY4ZDM5MCAxMDA2NDQKLS0tIGEvbmV0L3NjaGVkL2VtX21ldGEuYworKysgYi9uZXQvc2No
ZWQvZW1fbWV0YS5jCkBAIC0xOTUsNyArMTk1LDcgQEAgTUVUQV9DT0xMRUNUT1IoaW50X3ByaW9y
aXR5KQogTUVUQV9DT0xMRUNUT1IoaW50X3Byb3RvY29sKQogewogCS8qIExldCB1c2Vyc3BhY2Ug
dGFrZSBjYXJlIG9mIHRoZSBieXRlIG9yZGVyaW5nICovCi0JZHN0LT52YWx1ZSA9IHRjX3NrYl9w
cm90b2NvbChza2IpOworCWRzdC0+dmFsdWUgPSBza2JfcHJvdG9jb2woc2tiLCBmYWxzZSk7CiB9
CiAKIE1FVEFfQ09MTEVDVE9SKGludF9wa3R0eXBlKQpkaWZmIC0tZ2l0IGEvbmV0L3NjaGVkL3Nj
aF9jYWtlLmMgYi9uZXQvc2NoZWQvc2NoX2Nha2UuYwppbmRleCBjYTgxMzY5NzcyOGUuLmViYWVl
YzFlNWM4MiAxMDA2NDQKLS0tIGEvbmV0L3NjaGVkL3NjaF9jYWtlLmMKKysrIGIvbmV0L3NjaGVk
L3NjaF9jYWtlLmMKQEAgLTU5Miw3ICs1OTIsNyBAQCBzdGF0aWMgYm9vbCBjYWtlX3VwZGF0ZV9m
bG93a2V5cyhzdHJ1Y3QgZmxvd19rZXlzICprZXlzLAogCWJvb2wgcmV2ID0gIXNrYi0+X25mY3Qs
IHVwZCA9IGZhbHNlOwogCV9fYmUzMiBpcDsKIAotCWlmICh0Y19za2JfcHJvdG9jb2woc2tiKSAh
PSBodG9ucyhFVEhfUF9JUCkpCisJaWYgKHNrYl9wcm90b2NvbChza2IsIHRydWUpICE9IGh0b25z
KEVUSF9QX0lQKSkKIAkJcmV0dXJuIGZhbHNlOwogCiAJaWYgKCFuZl9jdF9nZXRfdHVwbGVfc2ti
KCZ0dXBsZSwgc2tiKSkKQEAgLTE1NTcsNyArMTU1Nyw3IEBAIHN0YXRpYyB1OCBjYWtlX2hhbmRs
ZV9kaWZmc2VydihzdHJ1Y3Qgc2tfYnVmZiAqc2tiLCBib29sIHdhc2gpCiAJdTE2ICpidWYsIGJ1
Zl87CiAJdTggZHNjcDsKIAotCXN3aXRjaCAodGNfc2tiX3Byb3RvY29sKHNrYikpIHsKKwlzd2l0
Y2ggKHNrYl9wcm90b2NvbChza2IsIHRydWUpKSB7CiAJY2FzZSBodG9ucyhFVEhfUF9JUCk6CiAJ
CWJ1ZiA9IHNrYl9oZWFkZXJfcG9pbnRlcihza2IsIG9mZnNldCwgc2l6ZW9mKGJ1Zl8pLCAmYnVm
Xyk7CiAJCWlmICh1bmxpa2VseSghYnVmKSkKZGlmZiAtLWdpdCBhL25ldC9zY2hlZC9zY2hfZHNt
YXJrLmMgYi9uZXQvc2NoZWQvc2NoX2RzbWFyay5jCmluZGV4IDA1NjA1YjMwYmVmMy4uMmI4ODcx
MDk5NGQ3IDEwMDY0NAotLS0gYS9uZXQvc2NoZWQvc2NoX2RzbWFyay5jCisrKyBiL25ldC9zY2hl
ZC9zY2hfZHNtYXJrLmMKQEAgLTIxMCw3ICsyMTAsNyBAQCBzdGF0aWMgaW50IGRzbWFya19lbnF1
ZXVlKHN0cnVjdCBza19idWZmICpza2IsIHN0cnVjdCBRZGlzYyAqc2NoLAogCWlmIChwLT5zZXRf
dGNfaW5kZXgpIHsKIAkJaW50IHdsZW4gPSBza2JfbmV0d29ya19vZmZzZXQoc2tiKTsKIAotCQlz
d2l0Y2ggKHRjX3NrYl9wcm90b2NvbChza2IpKSB7CisJCXN3aXRjaCAoc2tiX3Byb3RvY29sKHNr
YiwgdHJ1ZSkpIHsKIAkJY2FzZSBodG9ucyhFVEhfUF9JUCk6CiAJCQl3bGVuICs9IHNpemVvZihz
dHJ1Y3QgaXBoZHIpOwogCQkJaWYgKCFwc2tiX21heV9wdWxsKHNrYiwgd2xlbikgfHwKQEAgLTMw
Myw3ICszMDMsNyBAQCBzdGF0aWMgc3RydWN0IHNrX2J1ZmYgKmRzbWFya19kZXF1ZXVlKHN0cnVj
dCBRZGlzYyAqc2NoKQogCWluZGV4ID0gc2tiLT50Y19pbmRleCAmIChwLT5pbmRpY2VzIC0gMSk7
CiAJcHJfZGVidWcoImluZGV4ICVkLT4lZFxuIiwgc2tiLT50Y19pbmRleCwgaW5kZXgpOwogCi0J
c3dpdGNoICh0Y19za2JfcHJvdG9jb2woc2tiKSkgeworCXN3aXRjaCAoc2tiX3Byb3RvY29sKHNr
YiwgdHJ1ZSkpIHsKIAljYXNlIGh0b25zKEVUSF9QX0lQKToKIAkJaXB2NF9jaGFuZ2VfZHNmaWVs
ZChpcF9oZHIoc2tiKSwgcC0+bXZbaW5kZXhdLm1hc2ssCiAJCQkJICAgIHAtPm12W2luZGV4XS52
YWx1ZSk7CkBAIC0zMjAsNyArMzIwLDcgQEAgc3RhdGljIHN0cnVjdCBza19idWZmICpkc21hcmtf
ZGVxdWV1ZShzdHJ1Y3QgUWRpc2MgKnNjaCkKIAkJICovCiAJCWlmIChwLT5tdltpbmRleF0ubWFz
ayAhPSAweGZmIHx8IHAtPm12W2luZGV4XS52YWx1ZSkKIAkJCXByX3dhcm4oIiVzOiB1bnN1cHBv
cnRlZCBwcm90b2NvbCAlZFxuIiwKLQkJCQlfX2Z1bmNfXywgbnRvaHModGNfc2tiX3Byb3RvY29s
KHNrYikpKTsKKwkJCQlfX2Z1bmNfXywgbnRvaHMoc2tiX3Byb3RvY29sKHNrYiwgdHJ1ZSkpKTsK
IAkJYnJlYWs7CiAJfQogCmRpZmYgLS1naXQgYS9uZXQvc2NoZWQvc2NoX3RlcWwuYyBiL25ldC9z
Y2hlZC9zY2hfdGVxbC5jCmluZGV4IDY4OWVmNmYzZGVkOC4uMmYxZjBhMzc4NDA4IDEwMDY0NAot
LS0gYS9uZXQvc2NoZWQvc2NoX3RlcWwuYworKysgYi9uZXQvc2NoZWQvc2NoX3RlcWwuYwpAQCAt
MjM5LDcgKzIzOSw3IEBAIF9fdGVxbF9yZXNvbHZlKHN0cnVjdCBza19idWZmICpza2IsIHN0cnVj
dCBza19idWZmICpza2JfcmVzLAogCQljaGFyIGhhZGRyW01BWF9BRERSX0xFTl07CiAKIAkJbmVp
Z2hfaGFfc25hcHNob3QoaGFkZHIsIG4sIGRldik7Ci0JCWVyciA9IGRldl9oYXJkX2hlYWRlcihz
a2IsIGRldiwgbnRvaHModGNfc2tiX3Byb3RvY29sKHNrYikpLAorCQllcnIgPSBkZXZfaGFyZF9o
ZWFkZXIoc2tiLCBkZXYsIG50b2hzKHNrYl9wcm90b2NvbChza2IsIGZhbHNlKSksCiAJCQkJICAg
ICAgaGFkZHIsIE5VTEwsIHNrYi0+bGVuKTsKIAogCQlpZiAoZXJyIDwgMCkKLS0gCjIuMjcuMAoK
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KQ2FrZSBtYWls
aW5nIGxpc3QKQ2FrZUBsaXN0cy5idWZmZXJibG9hdC5uZXQKaHR0cHM6Ly9saXN0cy5idWZmZXJi
bG9hdC5uZXQvbGlzdGluZm8vY2FrZQo=

Return-Path: <cake-bounces@lists.bufferbloat.net>
X-Original-To: lists+cake@lfdr.de
Delivered-To: lists+cake@lfdr.de
Received: from lists.bufferbloat.net (lists.bufferbloat.net [IPv6:2600:3c03:e000:3ca:f00f:f00f:b33b:b33b])
	by mail.lfdr.de (Postfix) with ESMTPS id F25803504E5
	for <lists+cake@lfdr.de>; Wed, 31 Mar 2021 18:44:52 +0200 (CEST)
Received: from pitt.bufferbloat.net (localhost [127.0.0.1])
	by lists.bufferbloat.net (Postfix) with ESMTP id 98BB53CB43;
	Wed, 31 Mar 2021 12:44:51 -0400 (EDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
	d=lists.bufferbloat.net; s=201610; t=1617209091;
	bh=uVbRcgRsbmBee+sWukaa6FIp6VavUq4yJ0IljFGCltw=;
	h=Date:From:To:References:In-Reply-To:Subject:List-Id:
	 List-Unsubscribe:List-Archive:List-Post:List-Help:List-Subscribe:
	 Cc:From;
	b=kGDaHOFJhKg8eEYoypk9/sNnxoBFwWLr1VKsjOk5LiNjQwNwwxixmcuJ7xpFeHoIZ
	 BjAPRdz8MvFQNjg1RzJs3k+o7vvu+BmbMb0XvsgrEmKNTkEptROjuzt3/NgWVR7PPG
	 ja/jrRZRRop6SD5Q3i4mY00sJtYNcheGvyeE6h+JuaSqAQEzIgppU804boLyNAcEBo
	 ksZrj1Wkl+pFl6FIH2DEKzYNPE25HDyjlCC0LKapZKk7TR0pHNiySNsDMUZxZCadNn
	 l27g/AbCa3wsqe04/qVD9MzFVZsFuCnEQTmM2EgcPPk3Pe5YxOzWtfOgaOgdNsN34k
	 W2Rexd7tujkJQ==
X-Original-To: cake@lists.bufferbloat.net
Delivered-To: cake@lists.bufferbloat.net
Received: from outgoing.mit.edu (outgoing-auth-1.mit.edu [18.9.28.11])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by lists.bufferbloat.net (Postfix) with ESMTPS id 682753B29E;
 Wed, 31 Mar 2021 12:08:06 -0400 (EDT)
Received: from cwcc.thunk.org (pool-72-74-133-215.bstnma.fios.verizon.net
 [72.74.133.215]) (authenticated bits=0)
 (User authenticated as tytso@ATHENA.MIT.EDU)
 by outgoing.mit.edu (8.14.7/8.12.4) with ESMTP id 12VG82e6008005
 (version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-GCM-SHA384 bits=256 verify=NOT);
 Wed, 31 Mar 2021 12:08:03 -0400
Received: by cwcc.thunk.org (Postfix, from userid 15806)
 id 735D215C39CF; Wed, 31 Mar 2021 12:08:02 -0400 (EDT)
Date: Wed, 31 Mar 2021 12:08:02 -0400
From: "Theodore Ts'o" <tytso@mit.edu>
To: "David P. Reed" <dpreed@deepplum.com>
Message-ID: <YGSeYsKBdrf6U4Ds@mit.edu>
References: <CAA93jw5+_vW3b85ZOxpOn5_LoiPgxuj4XzH3=gkq8qYM2xunSA@mail.gmail.com>
 <1617049691.187521510@apps.rackspace.com>
 <YGKEbCGX57z9+PdA@mit.edu> <1617153830.6256867@apps.rackspace.com>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <1617153830.6256867@apps.rackspace.com>
X-Mailman-Approved-At: Wed, 31 Mar 2021 12:44:50 -0400
Subject: Re: [Cake] [Cerowrt-devel] wireguard almost takes a bullet
X-BeenThere: cake@lists.bufferbloat.net
X-Mailman-Version: 2.1.20
Precedence: list
List-Id: Cake - FQ_codel the next generation <cake.lists.bufferbloat.net>
List-Unsubscribe: <https://lists.bufferbloat.net/options/cake>,
 <mailto:cake-request@lists.bufferbloat.net?subject=unsubscribe>
List-Archive: <https://lists.bufferbloat.net/pipermail/cake>
List-Post: <mailto:cake@lists.bufferbloat.net>
List-Help: <mailto:cake-request@lists.bufferbloat.net?subject=help>
List-Subscribe: <https://lists.bufferbloat.net/listinfo/cake>,
 <mailto:cake-request@lists.bufferbloat.net?subject=subscribe>
Cc: Make-Wifi-fast <make-wifi-fast@lists.bufferbloat.net>,
 Cake List <cake@lists.bufferbloat.net>,
 cerowrt-devel <cerowrt-devel@lists.bufferbloat.net>,
 bloat <bloat@lists.bufferbloat.net>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: cake-bounces@lists.bufferbloat.net
Sender: "Cake" <cake-bounces@lists.bufferbloat.net>

T24gVHVlLCBNYXIgMzAsIDIwMjEgYXQgMDk6MjM6NTBQTSAtMDQwMCwgRGF2aWQgUC4gUmVlZCB3
cm90ZToKPiAKPiBPbiB0aGUgb3RoZXIgaGFuZCwgdGhleSBhcmUgcHJldHR5IGRhbW4gaGlnaCBz
YWxhcmllcyBmb3IgYQo+IG5vbi1wcm9maXQuIEFyZSB0aGV5IGFwcHJvcHJpYXRlPyBEZXBlbmRz
LiBUaGVyZSBhcmUgbm8gc3RvY2tob2xkZXJzCj4gYW5kIG5vIHByb2ZpdHMsIGp1c3QgYSBwcmV0
dHkgc3Vic3RhbnRpYWwgbmV0IHdvcnRoLgoKRm9yIGJldHRlciBvciBmb3Igd29yc2UsIHNlbmlv
ciBzb2Z0d2FyZSBlbmdpbmVlcnMgd2hvIHdvcmsgZm9yIEJpZwpUZWNoIHdpbGwgYmUgbWFraW5n
IHNpbWlsYXIgYW1vdW50cyBvZiBtb25leS4gIFdpdGhvdXQgYmVpbmcKaW5hcHByb3ByaWF0ZWx5
IHNwZWNpZmljLCBteSB0b3RhbCBjb21wZW5zYXRpb24gaXNuJ3QgdGhhdCBkaWZmZXJlbnQKZnJv
bSBMaW51cydzLCBvbmNlIHlvdSB0YWtlIHRoaW5ncyBsaWtlIGVxdWl0eSBjb21wZW5zYXRpb24g
aW50bwphY2NvdW50LiAgVGhpcyB3YXMgdHJ1ZSBib3RoIGluIG15IGN1cnJlbnQgZW1wbG95ZXIs
IGFzIHdlbGwgYXMgbXkKcHJldmlvdXMgZW1wbG95ZXIgKElCTSkuCgpJcyB0aGF0IHJpZ2h0IG9y
IHdyb25nPyAgVW5mb3J0dW5hdGVseSwgaXQgaXMgd2hhdCBpdCBpcy4gIFBhcnQgb2YgaXQKaXMg
dGhhdCBpdCdzIHZlcnkgbXVjaCBhIHN1cHBseSBhbmQgZGVtYW5kIHF1ZXN0aW9uLiAgSSBrbm93
LCBiZWNhdXNlCkkndmUgdHJpZWQgdG8gZmluZCB0YWxlbnRlZCBmaWxlIHN5c3RlbSBrZXJuZWwg
ZGV2ZWxvcGVycyBmb3IgbXkKdGVhbS4uLi4gYW5kIGl0J3MgaGFyZCB0byBmaW5kIHRoZW0uCgpJ
IGtub3cgdGhhdCBpbiBtYW55IHdheXMsIGl0J3MgaHVnZWx5IHVuZmFpci4gIFdoZW4gSSB3YXMg
YXQgSUJNLCBJCndhcyB0aGUgaGlnaCBwb3dlcmVkIHNlbmlvciBkZXZlbG9wZXIgd2hvIGNvdWxk
IG1lZXQgd2l0aCB0aGUgc2VuaW9yCnRlY2huaWNhbCBsZWFkZXJzIGF0IGEgbWFqb3IgVVMgZGVm
ZW5zZSBjb250cmFjdG9yLiAgSSB3YXMgdGhlIG9uZQp3aXRoIHRocyBUUy9TQ0kgc2VjdXJpdHkg
Y2xlYXJhbmNlLCBhbmQgeWVzLCBJIHdhcyB0aGUgc2VuaW9yCmFyY2hpdGVjdCB3aG8gZ290IGFu
IElCTSBhd2FyZCBmb3IgbXkgdGVhbSdzIHdvcmsgb24gcmVhbC10aW1lIExpbnV4CmNhcGFibGUg
b2YgcnVubmluZyByZWFsLXRpbWUgSmF2YSBmb3IgdXMgaW4gdGhlIERERygxMDAwKSBadW13YWx0
CmNsYXNzIGRlc3Ryb3llci4gIEFuZCB5ZXQsIHRoZSB2YXN0IG1ham9yaXR5IG9mIHRoZSB3b3Jr
IHdhcyBkb25lIGJ5Cm11Y2ggbW9yZSBqdW5pb3IgZW5naW5lZXJzLCBhbmQgdGhleSBkaWRuJ3Qg
Z2V0IGFueSBvZiB0aGUgbWFqb3IKYXdhcmRzLCBhbmQgdGhlaXIgc2FsYXJ5IHdhcyBtdWNoIGxl
c3MuICBJdCB3YXMgb25lIG9mIHRoZSBiZXN0IHRlYW1zCkkgaGFkIHRoZSBwbGVhc3VyZSBvZiB3
b3JraW5nIHdpdGgsIGFuZCBJJ20gZ2xhZCB0byBzZWUgdGhhdCB0aGV5IGFyZQpub3cgd29ya2lu
ZyBpbiBtdWNoIG1vcmUgc2VuaW9yIHJvbGVzIGF0IG90aGVyIGNvbXBhbmllcy4KClNvIHdoaWxl
IGl0J3MgZWFzeSB0byBjcml0aWNpemUgdGhlIExpbnV4IEZvdW5kYXRpb24sIGl0J3MgYnkgbm8g
bWVhbnMKdW5pcXVlIHRvIGl0LCBhbmQgdG8gdGhlIGV4dGVudCB0aGF0IGl0J3MgcGFydCBvZiBh
IGxhcmdlciB0ZWNoCmVjb3N5c3RlbSB0aGF0IHBheXMgZW5naW5lZXJzIGluIGEgdmVyeSBkaXNw
cm9wb3J0aW9uYXRlIHdheSwgaXQgaGFzCnRvIHBheSBpdHMgcGVvcGxlIGNvbW1lbnN1cmF0ZSB3
aXRoIHdoYXQgdGhleSBjb3VsZCBnZXQgaWYgdGhleSBoYWQKZGVjaWRlZCB0byBnbyB3b3JrIGZv
ciBhIGNvbXBhbnkgbGlrZSBGYWNlYm9vayBvciBBbWF6b24uCgo+IFJlZ2FyZGluZyB0aGUgb3Jn
YW5pemF0b24gb2YgIkxpbnV4LCBJbmMuIiBhcyBhIGhpZXJhY2hpY2FsIGNvbnRyb2wKPiBzdHJ1
Y3R1cmUgLSBJJ2xsIGp1c3QgcG9pbnQgb3V0IHRoYXQgaGllcmFyY2hpY2FsIGNvbnRyb2wgb2Yg
dGhlCj4gZGV2ZWxvcG1lbnQgb2YgTGludXggc3VnZ2VzdHMgdGhhdCBpdCBpcyBub3QgYXQgYWxs
IGEgImNvbW11bml0eQo+IHByb2plY3QiIChpZiBpdCBldmVyIHdhcykuIEl0J3MgYSBwcm9kdWN0
IGRldmVsb3BtZW50IG9yZ2FuaXphdGlvbgo+IHdpdGggbXVsdGlwbGUgbGV2ZWxzIG9mIG1hbmFn
ZW1lbnQuCgpTbyBJJ2QgYXJndWUgdGhhdCAqYW55KiBzdWNjZXNzZnVsLCB2ZXJ5IGxhcmdlIG9w
ZW4gc291cmNlIHByb2plY3QKbmVlZHMgdG8gaGF2ZSBtdWx0aXBsZSBsZXZlbHMgb2YgbWFuYWdl
bWVudC4gIEl0J3MgKnRlY2huaWNhbCoKbWFuYWdlcnMsIGFuZCBJIHdvdWxkIHBvaW50IG91dCB0
aGF0IGl0J3MgcmVhbGx5IG1vcmUgc2VydmFudApsZWFkZXJzaGlwIG1vcmUgdGhhbiBhbnl0aGlu
ZyBlbHNlLiAgSSBtYXkgYmUgdGhlIGV4dDQgbWFpbnRhaW5lciwgYnV0CnRoYXQgbWVhbnMgdGhh
dCBpbiBvcmRlciB0byBtYWtlIGV4dDQgc3VjY2Vzc2Z1bCwgSSBlbmQgdXAgZG9pbmcgdGhlCndv
cmsgdGhhdCBubyBvbmUgZWxzZSBmaW5kcyAiZnVuIiB0byB3b3JrIGZvciwgb3IgdGhhdCBjb21w
YW5pZXMKYXJlbid0IHdpbGxpbmcgdG8gcGF5IGVuZ2luZWVycyB0byBkbyBhcyBwYXJ0IG9mIHRo
ZWlyIGRheSBqb2IuICBTbwpmb3IgZXhhbXBsZSwgdGhlIHRlc3QgZnJhbWV3b3JrWzFdIGZvciBl
eHQ0IGlzIHNvbWV0aGluZyBJIGhhZCB0byBjcmVhdGUKYW5kIG1haW50YWluLCBiZWNhdXNlIG5v
IG9uZSBlbHNlIHdvdWxkIGRvIGl0LiAgQW5kIGNvZGUgcmV2aWV3IGlzIG5vdApuZWNlc3Nhcnkg
KmZ1biosIGJ1dCBzb21lb25lIGhhcyB0byBkbyBpdC4gIE11Y2ggb2YgdGhpcyB3b3JrIGFjdHVh
bGx5CmhhcHBlbnMgbGF0ZSBhdCBuaWdodCBvciBvbiB3ZWVrZW5kLCBvbiBteSBvd24gdGltZSwg
YmVjYXVzZSBJIGNhcmUKZW5vdWdoIGFib3V0IGl0IHRoYXQgaXQncyBzb21ldGhpbmcgSSAqY2hv
b3NlKiB0byBkbyBpdC4KClsxXSBodHRwczovL3RodW5rLm9yZy9nY2UteGZzdGVzdHMgCgpTbyBp
ZiB5b3VyIGRlZmluaXRpb24gb2YgYSAiY29tbXVuaXR5IHByb2plY3QiIGlzIG9uZSB3aGljaCBo
YXMgYQpub24tc2NhbGFibGUgZ292ZXJuYW5jZSBzdHJ1Y3R1cmUsIEknbSBnb2luZyB0byBoYXZl
IHRvIGRpc2FncmVlLiAgSW4KdGhlIGVhcmx5IDkwJ3MsIHdoZW4gSSBmaXJzdCBnZXR0aW5nIHN0
YXJ0ZWQgd2l0aCBMaW51eCwgdGhlcmUgd2VyZQphdHRlbXB0cyBmcm9tIHNlbmlvciBsZWFkZXJz
IGF0IE5ldEJTRCBhbmQgR05VIEhVUkQgd2hvIHRyaWVkIHRvIHdvbwptZSB0byBkbyB3b3JrIGZv
ciB0aGVpciBrZXJuZWwgaW5zdGVhZC4gIExldCdzIGp1c3Qgc2F5IHRoYXQgZXZlbgp0aGVuLCBh
ZnRlciBzZWVpbmcgdGhlIHRveGljaXR5L2RyYW1hIG9mIHRob3NlIGdvdmVybmFuY2Ugc3RydWN0
dXJlcywKKGFuZCBpdCBkaWRuJ3QgaGVscCB0aGF0IGxpdmluZyBpbiBDYW1icmlkZ2UsIEkgaGFk
IHRoZSBhYmlsaXR5IHRvCm1lZXQgYW5kIGJyZWFrIGJyZWFkIHdpdGggc29tZSBvZiB0aGVzZSBz
ZW5pb3IgcGVvcGxlIGZhY2UtdG8tZmFjZSksCm9uZSBvZiB0aGUgcHJpbWFyeSAqcmVhc29ucyog
d2h5IEkgZGVjbGluZWQgdG8gd29yayBvbiAqQlNEIGFuZCBIVVJECndhcyBkdWUgdG8gdGhlIGxl
YWRlcnMgb2YgdGhvc2UgcHJvamVjdHMgdGhhdCBJIHdvdWxkIGhhdmUgaGFkIHRvIHdvcmsKd2l0
aC4gIFRoaXMgZGVzcGl0ZSB0aGUgZmFjdCB0aGF0IG15IGZpcnN0IE9TL3N5c3RlbXMgcHJvZ3Jh
bW1pbmcKZXhwZXJpZW5jZSwgY291cnRlc3kgb2YgTUlUIFByb2plY3QgQXRoZW5hLCB3YXMgb24g
QlNEIDQuMy4KCj4gWWV0IHRoZSBkZXZlbG9wZXJzIGFyZSBlbXBsb3llZXMgb2YgYSBzbWFsbCBu
dW1iZXIgb2YgbWFqb3IKPiBjb3Jwb3JhdGlvbnMuIEluIHRoaXMgc2Vuc2UsIGl0IGlzIGxpa2Ug
YSAiam9pbnQgdmVudHVyZSIgYW1vbmcKPiB0aG9zZSBjb21wYW5pZXMuCj4gIAo+IFRvIHRoZSBl
eHRlbnQgdGhhdCB0aG9zZSBjb21wYW5pZXMgZ2FpbiAocGFydGlhbCkgY29udHJvbCBvZiB0aGUK
PiBMaW51eCBrZXJuZWwsIGFzIGFwcGVhcnMgdG8gYmUgdGhlIGNhc2UsIEkgdGhpbmsgTGludXgg
bWlzcmVwcmVzZW50cwo+IGl0c2VsZiBhcyBhICJjb21tdW5pdHkgcHJvamVjdCIsIGFuZCBpbiBw
YXJ0aWN1bGFyLCB0aGUgYWN0dWFsIHVzZXJzCj4gb2YgdGhlIHNvZnR3YXJlIG1heSBoYXZlIGxp
dHRsZSBzYXkgaW4gdGhlIGRpcmVjdGlvbiBkZXZlbG9wbWVudAo+IHRha2VzIGdvaW5nIGZvcndh
cmRzLgoKVGhlcmUgYXJlIGNlcnRhaW5seSBzdGlsbCBkZXZlbG9wZXJzIGluIExpbnV4IHRoYXQg
YXJlIGhvYmJ5aXN0cywgYW5kCm5vdCBldmVyeW9uZSB3b3JrcyBmb3IgQmlnIFRlY2guICBJbiBm
YWN0LCBKYXNvbiB3b3JrZWQgYXQgYSBzdGFydHVwCnRoYXQgd2FzIGNlcnRhaW5seSBub3Qgd2hh
dCBJIHdvdWxkIGNhbGwgYW4gZXhhbXBsZSBvZiBCaWcgVGVjaC4KU3VyZSwgaGlzIHN0YXJ0dXAg
bGV0IGhpbSBzcGVuZCBhIHNpZ25pZmljYW50IGFtb3VudCBvZiBoaXMgdGltZQp3b3JraW5nIG9u
IGdldHRpbmcgV2lyZUd1YXJkIHVwc3RyZWFtLCBidXQgV2lyZUd1YXJkIHdhcyB2ZXJ5IG11Y2gK
YWNjZXB0ZWQgb24gdGhlIGJhc2lzIG9mIHRoZSBtZXJpdHMgb2YgaGlzIHdvcmsuICBJdCB3YXMg
bm90IGJlY2F1c2UKc29tZW9uZSBwYWlkICQkJCB0byB0aGUgTGludXggRm91bmRhdGlvbiwgb3Ig
YW55dGhpbmcgY3JhenkgbGlrZSB0aGF0LgoKSSBhbHNvIHN0YXJ0ZWQgb3V0IGFzIGEgaG9iYnlp
c3QuICBGb3IgYSBsb25nIHRpbWUsIGJlaW5nIHRlY2ggbGVhZApmb3IgS2VyYmVyb3MgYXQgTUlU
LCBhbmQgZG9pbmcgSUVURiBzdGFuZGFyZHMgd29yayAoZS5nLiwgSSB3YXMgaXBzZWMKd29ya2lu
ZyBncm91cCBjaGFpcikgd2FzIG15IGRheSBqb2IsIGFuZCBMaW51eCBhcyBteSBob2JieS4gIFN1
cmUsIEkKd2FzIHRoZSBmaXJzdCBOb3J0aCBBbWVyaWNhbiBMaW51eCBrZXJuZWwgZGV2ZWxvcGVy
LCBhbmQgdGhhdCBnb3QgbWUKaW52aXRlZCB0byBhIGJ1bmNoIG9mIGNvbmZlcmVuY2VzIHdobyB3
ZXJlIHdpbGxpbmcgdG8gcGF5IG15IHRyYXZlbApleHBlbnNlcyAoc2luY2UgSSB3YXMgYSBzdGFy
dmluZyBhY2FkZW1pYyksIGJ1dCBJIHdhcyBwYWlkIGEgdmVyeQpzbWFsbCBzYWxhcnkgY29tcGFy
ZWQgdG8gaW5kdXN0cnkuICAoV2Ugd2VyZSB3b25kZXJpbmcgd2h5IE1JVCBrZXB0IG9uCmxvc2lu
ZyBwZW9wbGUgdG8gaW5kdXN0cnksIHNvIG15IGRlcGFydG1lbnQgYnJvdWdodCBpbiBhIHNhbGFy
eQpjb25zdWx0YW50IHdobyBkZXRlcm1pbmVkIHRoYXQgTUlUIHdhcyBwYXlpbmcgaXRzIHBlb3Bs
ZSBhdCB0aGUgdGVudGgKcGVyY2VudGlsZSBvZiBpbmR1c3RyeSBhdCB0aGF0IHRpbWUuKSAgSSBk
b3VibGVkIG15IHNhbGFyeSB3aGVuIEkgd2VudAp0byB3b3JrIGZvciBhIHN0YXJ0dXAsIGFuZCBn
aXZlbiB0aGF0IFZBIExpbnV4IFN5c3RlbXMgaW1wbG9kZWQgYmVmb3JlCkkgd2FzIGFibGUgdG8g
c2VsbCBtb3N0IG9mIG15IHN0b2NrLCB0aGF0IGZpZ3VyZSB3YXMgKmJlZm9yZSogYW55CmVxdWl0
eSBjb21wZW5zYXRpb24uCgpTb21lIG9mIHRoZSBwZW9wbGUgd2hvIHdlcmUgc21hcnRlciB0aGFu
IG1lLCBhdCBsZWFzdCBpbiB0ZXJtcyBvZgpkZWNpZGluZyB0byBnbyBvdXQgaW50byBpbmR1c3Ry
eSBtdWNoIHNvb25lciwgYW5kIHdobyB3ZXJlIGFibGUgdG8KYmVuZWZpdCBmcm9tIFJlZCBIYXQn
cyBJUE8sIGhhdmUgbXVsdGlwbGUgZXhwZW5zaXZlIGhvdXNlcyBhbmQgY2FuCnRyYXZlbCBiZXR3
ZWVuIHRoZW0gYXMgdGhlIHNraSBzZWFzb25zIG9wZW4gdXAuICBBbmQgSSBhbHNvIGtub3cKcGVv
cGxlIHdvcmtpbmcgaW4gSW5kaWFuYSBjb250cmlidXRpbmcgdG8gTGludXggd2hvIG1ha2UgYSB0
aW55CmZyYWN0aW9uIG9mIHdoYXQgb25lIGNhbiBtYWtlIGluIEJpZyBUZWNoLiAgSSB0cnkgbm90
IHRvIGdldCBlbnZpb3VzCm92ZXIgdGhvc2Ugd2hvIGhhdmUgZG9uZSBmaW5hbmNpYWxseSBtdWNo
IGJldHRlciB0aGFuIEksIGFuZCBJIGFsc28KdHJ5IG5vdCB0byB0aGluayB0aGF0IEknbSBpbmhl
cmVudGx5IHN1cGVyaW9yIGp1c3QgYmVjYXVzZSBJJ3ZlIGJlZW4KaW5jcmVkaWJseSBibGVzc2Vk
IGFuZCBsdWNreSBhbmQgaGF2ZSBhIHZlcnkgcHJpdmlsZWdlZCBleGlzdGVuY2UuCkxpZmUgaXMg
dW5mYWlyLCBhbmQgYWxsIHlvdSBjYW4gZG8gaXMgdG8gdHJ5IHRvIHlvdXIgYmVzdCB0byBtYWtl
IHRoZQp3b3JsZCBhIGJldHRlciBwbGFjZSB0aGFuIHdoZW4geW91IGVudGVyZWQgaXQuCgo+IFRo
ZXJlJ3MgbGl0dGxlIHNhZmVndWFyZCwgZm9yIGV4YW1wbGUsIGFnYWluc3QgInNlbmlvciBtYW5h
Z2VtZW50Igo+IGJpYXNlcyBpbiBzdXBwb3J0IG9mIGNlcnRhaW4gdmVuZG9ycywgaWYgb3RoZXIg
dmVuZG9ycyBhcmUgZXhjbHVkZWQKPiBmcm9tIGVmZmVjdGl2ZSBwYXJ0aWNpcGF0aW9uIGJ5IG9u
ZSBvZiBtYW55IHRlY2huaXF1ZXMuIEluIG90aGVyCj4gd29yZHMsIHRoZXJlJ3Mgbm8gd2F5IGl0
IGNhbiBiZSBhIGxldmVsIHBsYXlpbmcgZmllbGQgZm9yCj4gaW5ub3ZhdGlvbi4KClRoZSBzYWZl
Z3VhcmQgaXMgaW4gdGhlIG1haW50YWluZXJzJyBoYW5kcy4gIFJlbWVtYmVyLCB3ZSAib3duIiBv
dXIKc3Vic3lzdGVtcyBhbmQgdG8gdGhlIGV4dGVudCB0aGF0IHdlIGFyZSBwYXNzaW9uYXRlIHRv
IGxldCBpdCBiZQpzdWNjZXNzZnVsLCB3ZSdsbCB0YWtlIHRoZSBoZWxwIGZyb20gd2hlcmVldmVy
IHdlIGNhbiBnZXQgaXQuICBJIG1pZ2h0CmJlIGF0IENvbXBhbnkgQSBvbmUgeWVhciwgYW5kIENv
bXBhbnkgQiBhbm90aGVyLCBhbmQgaWYgSSB0YWtlIGNyYXBweQpjb2RlIGZyb20gb25lIENvbXBh
bnksIEknbGwgZW5kIHVwIG93bmluZyB0aGF0IGNyYXAgYW5kIEknbGwKdWx0aW1hdGVseSBuZWVk
IHRvIGZpeCBpdCBsYXRlciwgcGVyaGFwcyB3aGVuIEknbSBhdCBhbm90aGVyIGNvbXBhbnkuCgpJ
dCBpcyB0cnVlIHRoYXQgYXMgYSBzb21lb25lIHdobyBtYW5hZ2VzIHZvbHVudGVlcnMgKHJlZ2Fy
ZGxlc3Mgb2YKd2hldGhlciBzdWNoIHZvbHVudGVlcnMgYXJlIGhvYmJ5aXN0cyBvciBwZW9wbGUg
d2hvIGFyZSBkb2luZyB0aGUgd29yawpwYWlkIGJ5IGEgY2VydGFpbiBjb21wYW55KSwgd2UgY2Fu
J3QgZm9yY2Ugc29tZW9uZSB0byBpbXBsZW1lbnQgYQpwYXJ0aWN1bGFyIGZlYXR1cmUgb3IgZml4
IGEgY2VydGFpbiBidWcuICBBcyBJIGxlYXJuZWQgZnJvbSBteSBzZXJ2aWNlCm9uIHRoZSBJRVRG
LCB0aGUgb25seSBwb3dlciBvZiBzdWNoIGxlYWRlcnMgaXMgdG8gc2F5ICJObyIuICBCdXQgaWYg
d2UKc3RvcCBhIGdvb2QgZmVhdHVyZSBmcm9tIGdldHRpbmcgaW4sIHRoYXQgdWx0aW1hdGVseSBp
cyBnb2luZyB0byBiZSB0bwp0aGUgZGV0cmltZW50IG9mIG91ciBzdWJzeXN0ZW0uCgpBbmQgaWYg
dGhhdCBkb2VzIGhhcHBlbiBmb3Igc29tZSByZWFzb24sIG9uZSBvZiB0aGUgcm9sZXMgdGhhdCBM
aW51cwpwbGF5cyBpcyBhcyBhbiBhdXRob3JpdHkgdGhhdCBzb21lb25lIGNhbiBhcHBlYWwgdG8u
ICBJJ3ZlIG5ldmVyIHNlZW4KYSBzdXBwb3J0IGZvciBzb21lIENQVSBhcmNoaXRlY3R1cmUgZ2V0
IGRlbmllZCBqdXN0IGJlY2F1c2UgaXQgbWlnaHQKdGhyZWF0ZW4gZXhpc3RpbmcgIkJpZyBDb21w
YW55cyIsIGZvciBleGFtcGxlLiAgSSdtIHN1cmUgdGhlIEFSTSBTT0Mncwp3ZXJlbid0IGhhcHB5
IHRvIHNlZSBSSVNDLVYgc3VwcG9ydCBsYW5kIGluIHRoZSBrZXJuZWwuICBCdXQgaWYgdGhlcmUK
d2FzIGFuIGF0dGVtcHQgdG8ga2VlcCBSSVNDLVYgb3V0IG9mIHRoZSBrZXJuZWwsIHRoYXQncyBh
IGNhc2Ugd2hlcmUKTGludXMgd291bGQgaW50ZXJ2ZW5lLCBzaW5jZSB1bHRpbWF0ZWx5IGl0J3Mg
KmhpcyogY2hvaWNlIHRvIGFjY2VwdCBhCm5ldyBzdWJzeXN0ZW0gYW5kIGEgbmV3IG1haW50YWlu
ZXIuCgo+IChvbmUgdGhhdCBpcyBub3QgdHJhbnNwYXJlbnQgYXQgYWxsIGFib3V0IGZ1bmN0aW9u
aW5nIGFzIHN1Y2ggLQo+IHByZWZlcnJpbmcgdG8gZ2l2ZSB0aGUgaW1wcmVzc2lvbiB0aGF0IHRo
ZSBrZXJuZWwgaXMgZGV2ZWxvcGVkIGJ5Cj4gcGFydC10aW1lIHZvbHVudGFyeSAiY29udHJpYnV0
aW9ucyIpLgoKQWN0dWFsbHksIHRoZSBMaW51eCBGb3VuZGF0aW9uIGhhcyBiZWVuIHF1aXRlIHRy
YW5zcGFyZW50IGFib3V0IHRoaXM7CmV2ZXJ5IGZldyB5ZWFycywgaXQgcmVsYXNlcyBhICJXaG8g
V3JpdGVzIExpbnV4IFJlcG9ydCIuICBBbnlvbmUgd2hvCmhhZCBzdWNoIGFuIGltcHJlc3Npb24g
aGFzbid0IGJlZW4gcGF5aW5nIGF0dGVudGlvbjoKCmh0dHBzOi8vd3d3LmxpbnV4Zm91bmRhdGlv
bi5vcmcvd3AtY29udGVudC91cGxvYWRzL2xpbnV4LWtlcm5lbC1yZXBvcnQtMjAxNy5wZGYKaHR0
cHM6Ly93d3cubGludXhmb3VuZGF0aW9uLm9yZy93cC1jb250ZW50L3VwbG9hZHMvMjAyMF9rZXJu
ZWxfaGlzdG9yeV9yZXBvcnRfMDgyNzIwLnBkZgoKRnJvbSB0aGVzZSByZXBvcnRzLCB5b3UnbGwg
c2VlIHRoYXQgaW4gMjAxNyB3ZSBoYWQgOC4yJSBvZiB0aGUKY29udHJpYnV0aW9ucyBjb21pbmcg
ZnJvbSBwZW9wbGUgd2VyZW4ndCBnZXR0aW5nIGZpbmFuY2lhbApjb250cmlidXRpb25zICh3aXRo
IGFub3RoZXIgNC4xJSB3aGVyZSB0aGUgc291cmNlIG9mIGZpbmFuY2lhbCBzdXBwb3J0CmNvdWxk
bid0IGJlIGRldGVybWluZWQpLiAgVGhpcyB3YXMgZG93biBmcm9tIHRoZSAyMDEzIHJlcG9ydCwg
d2hlcmUKMTQuNiUgb2YgdGhlIGNvbnRyaWJ1dGlvbnMgY2FtZSBmcm9tIGhvYmJ5aXN0cy4KCklu
IHRoZSAyMDIwIHJlcG9ydCwgIk5vbmUiIHdhcyAxMS45NSUsIHdpdGggdGhlIG5leHQgaGlnaGVz
dApjb250cmlidXRvciBiZWluZyBJbnRlbCBhdCAxMCUsIFJlZCBIYXQgYXQgOC45JSwgIlVua25v
d24iIGF0IDQlLCBhbmQKSUJNIGF0IDMuOCUuICAoR29vZ2xlIHdhcyBtdWNoIGZhcnRoZXIgZG93
biB0aGUgbGlzdCwgYXQgMi44JSkuICBOb3QKdG8gcHV0IHRvbyBmaW5lIGEgcG9pbnQgb24gaXQs
ICJwZW9wbGUgd2hvIHJlY2VpdmUgbm8gZmluYW5jaWFsCmNvbnRyaWJ1dGlvbnMiIGFyZSAjMSBv
biB0aGUgIlRvcCAyMCBjb21taXR0ZXJzIGxpc3QiLgoKPiBUaGUgY29udHJhc3Qgd2l0aCBvdGhl
ciBvcGVuIHNvdXJjZSBjb21tdW5pdGllcyBpcyBxdWl0ZSBzaGFycAo+IG5vdy4gVGhlcmUgaXMg
bGl0dGxlIGVsZWVtb3N5bmFyeSBpbnRlbnQgdGhhdCBjYW4gYmUgZGV0ZWN0ZWQgYW55Cj4gbW9y
ZS4gSSB0aGluayB0aGF0IGlzIHRvbyBiYWQsIGJ1dCB0aGluZ3MgY2hhbmdlLgoKSWYgeW91IGxv
b2sgYXQgdGhlIG1lbWJlcnMgb2YgdGhlIEdpdCwgUGVybCBhbmQgUHl0aG9uIGNvbW11bml0aWVz
biwgSQpiZWxpZXZlIHlvdSdsbCBmaW5kIHRoYXQgbW9zdCBvZiB0aGUgbWFqb3IgY29udHJpYnV0
b3JzIGRvIHdvcmsgZm9yCmNvbXBhbmllcyB0aGF0IHBheSBmb3IgYXQgbGVhc3QgcGFydCBvZiB0
aGVpciBvcGVuIHNvdXJjZQpjb250cmlidXRpb25zLiAgR2l2ZW4gdGhhdCBtb3N0IHBlb3BsZSBk
byBlbmpveSBoYXZpbmcgZm9vZCB3aXRoIHRoZWlyCm1lYWxzLCBpZiBhIE9TUyBwcm9qZWN0IGlz
IHN1Y2Nlc3NmdWwsIHRoaXMgcmVhbGx5IHNob3VsZG4ndCBiZSBhCnN1cnByaXNlLgoKSXQgaXMg
dHJ1ZSB0aGF0IHRoZXJlIGlzIGEgaHVnZSBsb25nIHRhaWwgb2YgT1NTIHByb2plY3RzIHdoaWNo
IGhhdmUKbm90IGJlZW4gc3VjY2Vzc2Z1bCwgYW5kIHdoaWNoIG9ubHkgZXhpc3QgYXMgYWJhbmRv
bndhcmUgb24KU291cmNlRm9yZ2Ugb3IgR2l0SHViLiAgKE9yIGluIHRoZSBjYXNlIG9mIE9wZW5P
ZmZpY2UsIGFzIHBhcnQgb2YgdGhlCkFwYWNoZSBDb25zb3J0aXVtIDotUCkgIEJ1dCBqdXN0IGFz
IHRoZSB2YXN0IG1ham9yaXRpZXMgb2Ygc3RhcnR1cHMgZW5kCnVwIGVtcGxvZGluZyB3aXRoIGxl
c3MgdGhhbiAxJSBiZWNvbWluZyB0aGUgSVBPIHVuaWNvcm5zLCBJJ20gbm90IHNvCnN1cmUgaXQn
cyBhbnl0aGluZyBtb3JlIHRoYW4gc291ciBncmFwcyBmb3IgcGVvcGxlIHRvIGNsYWltIHRoYXQg
dGhlCnN0YXJ0dXBzIHdoaWNoIG1hZGUgaXQgYmlnIHdlcmUgbmV2ZXIgInJlYWwgc3RhcnR1cHMi
IHRvIGJlZ2luIHdpdGgsCmFuZCB0aGF0IHRoZSBzdG9yeSBvZiBzdGFydHVwcyBpcyBhbGwgYSBC
aWcgTGllLgoKQ2hlZXJzLAoKCQkJCQkJLSBUZWQKX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX18KQ2FrZSBtYWlsaW5nIGxpc3QKQ2FrZUBsaXN0cy5idWZmZXJi
bG9hdC5uZXQKaHR0cHM6Ly9saXN0cy5idWZmZXJibG9hdC5uZXQvbGlzdGluZm8vY2FrZQo=
